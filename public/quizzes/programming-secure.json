{
  "category": "programming",
  "subcategory": "secure-programming",
  "questions": [
    {
      "id": 1,
      "question": "SQLインジェクション攻撃を防ぐために最も有効な対策はどれですか？",
      "options": [
        "HTMLエスケープを行う",
        "パスワードを平文で保存する",
        "プリペアドステートメントを使用する",
        "ログ出力をやめる"
      ],
      "correctAnswer": 2,
      "explanation": "SQLインジェクションは、SQL文に悪意ある入力を埋め込む攻撃です。プリペアドステートメントを使うことで、入力をSQLの構文として解釈されないように防げます。"
    },
    {
      "id": 2,
      "question": "クロスサイトスクリプティング（XSS）への対策として正しいのはどれですか？",
      "options": [
        "入力値のログ出力を止める",
        "データベースを暗号化する",
        "ユーザー入力の出力時にHTMLエスケープを行う",
        "アカウントロックを導入する"
      ],
      "correctAnswer": 2,
      "explanation": "XSSは、ユーザー入力がHTMLとして解釈されることでスクリプトが実行される脆弱性です。出力時にHTMLエスケープを行うことが基本対策です。"
    },
    {
      "id": 3,
      "question": "CSRF（クロスサイトリクエストフォージェリ）への対策として適切なのはどれですか？",
      "options": [
        "強力なパスワードを設定する",
        "CSRFトークンを使用する",
        "アクセス制御を解除する",
        "ユーザー名を暗号化する"
      ],
      "correctAnswer": 1,
      "explanation": "CSRF対策としては、リクエストに固有のCSRFトークンを含め、サーバ側で正当性を検証するのが基本的な対策です。"
    },
    {
      "id": 4,
      "question": "ユーザー認証機能を実装する際の適切なセキュリティ対策はどれですか？",
      "options": [
        "パスワードをSHA-1で保存する",
        "セッションIDをURLに埋め込む",
        "パスワードをハッシュ化し、ソルトを付ける",
        "IDとパスワードを画面に表示する"
      ],
      "correctAnswer": 2,
      "explanation": "パスワードはハッシュ化して保存し、同一のパスワードでも異なる値になるようにソルトを追加することが重要です。SHA-1は推奨されません。"
    },
    {
      "id": 5,
      "question": "脆弱なコードによって任意のOSコマンドが実行されてしまう脆弱性は何と呼ばれますか？",
      "options": [
        "XSS",
        "CSRF",
        "OSコマンドインジェクション",
        "SQLインジェクション"
      ],
      "correctAnswer": 2,
      "explanation": "OSコマンドインジェクションは、外部から入力された文字列を元にコマンドを生成・実行する際、入力が検証されていないと発生する脆弱性です。"
    }
  ]
}
